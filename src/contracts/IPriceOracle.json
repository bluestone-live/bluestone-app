{
  "contractName": "IPriceOracle",
  "abi": [
    {
      "inputs": [],
      "name": "updatePriceIfNeeded",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "tokenPrice",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.6.7+commit.b8d736ae\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"getPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenPrice\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"updatePriceIfNeeded\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"updatePriceIfNeeded()\":{\"details\":\"Call this function before getPrice() if price freshness is important\"}}},\"userdoc\":{\"methods\":{\"getPrice()\":{\"notice\":\"Return the current token price in USD\"},\"updatePriceIfNeeded()\":{\"notice\":\"Update the token price if necessary\"}}}},\"settings\":{\"compilationTarget\":{\"/Users/tianyouluo/codes/bluestone/contracts/oracle/interface/IPriceOracle.sol\":\"IPriceOracle\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/tianyouluo/codes/bluestone/contracts/oracle/interface/IPriceOracle.sol\":{\"keccak256\":\"0x42c495a83bb5c2c10bacfd3066eda87fe1a91c6511683ebc60d12effacee1510\",\"urls\":[\"bzz-raw://931f4a8bf80c3ed00fbe94639695273e7ecd343b3ee317cf2852100b7eeb4a98\",\"dweb:/ipfs/Qmdtk2ZnkwCMRxe1YznF5KEyrS52Gkicogmom2Z1vs5zz1\"]}},\"version\":1}",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "immutableReferences": {},
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "pragma solidity ^0.6.7;\n\n\ninterface IPriceOracle {\n    /// @notice Update the token price if necessary\n    /// @dev Call this function before getPrice() if price freshness is important\n    function updatePriceIfNeeded() external;\n\n    /// @notice Return the current token price in USD\n    /// @return tokenPrice\n    function getPrice() external view returns (uint256 tokenPrice);\n}\n",
  "sourcePath": "/Users/tianyouluo/codes/bluestone/contracts/oracle/interface/IPriceOracle.sol",
  "ast": {
    "absolutePath": "/Users/tianyouluo/codes/bluestone/contracts/oracle/interface/IPriceOracle.sol",
    "exportedSymbols": {
      "IPriceOracle": [
        1600
      ]
    },
    "id": 1601,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1589,
        "literals": [
          "solidity",
          "^",
          "0.6",
          ".7"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:12"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": null,
        "fullyImplemented": false,
        "id": 1600,
        "linearizedBaseContracts": [
          1600
        ],
        "name": "IPriceOracle",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": null,
            "documentation": {
              "id": 1590,
              "nodeType": "StructuredDocumentation",
              "src": "55:129:12",
              "text": "@notice Update the token price if necessary\n @dev Call this function before getPrice() if price freshness is important"
            },
            "functionSelector": "f62fb7d2",
            "id": 1593,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "updatePriceIfNeeded",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1591,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "217:2:12"
            },
            "returnParameters": {
              "id": 1592,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "228:0:12"
            },
            "scope": 1600,
            "src": "189:40:12",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": null,
            "documentation": {
              "id": 1594,
              "nodeType": "StructuredDocumentation",
              "src": "235:76:12",
              "text": "@notice Return the current token price in USD\n @return tokenPrice"
            },
            "functionSelector": "98d5fdca",
            "id": 1599,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getPrice",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1595,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "333:2:12"
            },
            "returnParameters": {
              "id": 1598,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1597,
                  "mutability": "mutable",
                  "name": "tokenPrice",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1599,
                  "src": "359:18:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1596,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "359:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "358:20:12"
            },
            "scope": 1600,
            "src": "316:63:12",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 1601,
        "src": "26:355:12"
      }
    ],
    "src": "0:382:12"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "/Users/tianyouluo/codes/bluestone/contracts/oracle/interface/IPriceOracle.sol",
      "exportedSymbols": {
        "IPriceOracle": [
          1600
        ]
      }
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            "^",
            "0.6",
            ".7"
          ]
        },
        "id": 1589,
        "name": "PragmaDirective",
        "src": "0:23:12"
      },
      {
        "attributes": {
          "abstract": false,
          "baseContracts": [
            null
          ],
          "contractDependencies": [
            null
          ],
          "contractKind": "interface",
          "documentation": null,
          "fullyImplemented": false,
          "linearizedBaseContracts": [
            1600
          ],
          "name": "IPriceOracle",
          "scope": 1601
        },
        "children": [
          {
            "attributes": {
              "body": null,
              "functionSelector": "f62fb7d2",
              "implemented": false,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "updatePriceIfNeeded",
              "overrides": null,
              "scope": 1600,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "external"
            },
            "children": [
              {
                "attributes": {
                  "text": "@notice Update the token price if necessary\n @dev Call this function before getPrice() if price freshness is important"
                },
                "id": 1590,
                "name": "StructuredDocumentation",
                "src": "55:129:12"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 1591,
                "name": "ParameterList",
                "src": "217:2:12"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 1592,
                "name": "ParameterList",
                "src": "228:0:12"
              }
            ],
            "id": 1593,
            "name": "FunctionDefinition",
            "src": "189:40:12"
          },
          {
            "attributes": {
              "body": null,
              "functionSelector": "98d5fdca",
              "implemented": false,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "getPrice",
              "overrides": null,
              "scope": 1600,
              "stateMutability": "view",
              "virtual": false,
              "visibility": "external"
            },
            "children": [
              {
                "attributes": {
                  "text": "@notice Return the current token price in USD\n @return tokenPrice"
                },
                "id": 1594,
                "name": "StructuredDocumentation",
                "src": "235:76:12"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 1595,
                "name": "ParameterList",
                "src": "333:2:12"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "tokenPrice",
                      "overrides": null,
                      "scope": 1599,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 1596,
                        "name": "ElementaryTypeName",
                        "src": "359:7:12"
                      }
                    ],
                    "id": 1597,
                    "name": "VariableDeclaration",
                    "src": "359:18:12"
                  }
                ],
                "id": 1598,
                "name": "ParameterList",
                "src": "358:20:12"
              }
            ],
            "id": 1599,
            "name": "FunctionDefinition",
            "src": "316:63:12"
          }
        ],
        "id": 1600,
        "name": "ContractDefinition",
        "src": "26:355:12"
      }
    ],
    "id": 1601,
    "name": "SourceUnit",
    "src": "0:382:12"
  },
  "compiler": {
    "name": "solc",
    "version": "0.6.7+commit.b8d736ae.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.3.3",
  "updatedAt": "2021-05-28T02:21:22.556Z",
  "devdoc": {
    "methods": {
      "updatePriceIfNeeded()": {
        "details": "Call this function before getPrice() if price freshness is important"
      }
    }
  },
  "userdoc": {
    "methods": {
      "getPrice()": {
        "notice": "Return the current token price in USD"
      },
      "updatePriceIfNeeded()": {
        "notice": "Update the token price if necessary"
      }
    }
  }
}