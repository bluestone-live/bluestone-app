{
  "contractName": "SingleFeedPriceOracle",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "lastUpdatedAt",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "updatePriceIfNeeded",
      "outputs": [],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "requestedPrice",
          "type": "uint256"
        }
      ],
      "name": "setPrice",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"getPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastUpdatedAt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"requestedPrice\",\"type\":\"uint256\"}],\"name\":\"setPrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"updatePriceIfNeeded\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"getPrice()\":{\"returns\":{\"_0\":\"tokenPrice\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"updatePriceIfNeeded()\":{\"details\":\"Call this function before getPrice() if price freshness is important\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"getPrice()\":{\"notice\":\"Return the current token price in USD\"},\"updatePriceIfNeeded()\":{\"notice\":\"Update the token price if necessary\"}},\"notice\":\"A simple price oracle that receives price update from owner only.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/oracle/SingleFeedPriceOracle.sol\":\"SingleFeedPriceOracle\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"project:/contracts/oracle/SingleFeedPriceOracle.sol\":{\"keccak256\":\"0x1690948e385d25acabd751c1abe2e0a7b743d99a52ac6562dd0129b4386ca46e\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://3e58e452a4eda7d547a76e479549d7b60ef4d1ca9e87e9f8c73c5b0844d31846\",\"dweb:/ipfs/QmYWkcrexx4JtT68ZEpJpkcL6TFUFrfLGKCuow2GQ3g7yF\"]},\"project:/contracts/oracle/interface/IPriceOracle.sol\":{\"keccak256\":\"0xd70e47b9995b483098043f568a182286d6adc8941f043849127046dc4974cd64\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://291681f18a9a461c71d0e678cdf0580902666b1f881fc827ea7cdedcefcb5d80\",\"dweb:/ipfs/QmSfEUfgMrtUsNHNmgfMPaXho9tff8BpogwiNTMedPrA9W\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b61030d8061007e6000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c806391b7f5ed1161005b57806391b7f5ed146100c357806398d5fdca146100d6578063f2fde38b146100de578063f62fb7d2146100a657600080fd5b806354aea12714610082578063715018a61461009e5780638da5cb5b146100a8575b600080fd5b61008b60025481565b6040519081526020015b60405180910390f35b6100a66100f1565b005b6000546040516001600160a01b039091168152602001610095565b6100a66100d13660046102be565b610105565b60015461008b565b6100a66100ec36600461028e565b61016b565b6100f96101e4565b610103600061023e565b565b61010d6101e4565b600081116101625760405162461bcd60e51b815260206004820152601a60248201527f50726963654f7261636c653a20696e76616c696420707269636500000000000060448201526064015b60405180910390fd5b60015542600255565b6101736101e4565b6001600160a01b0381166101d85760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610159565b6101e18161023e565b50565b6000546001600160a01b031633146101035760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610159565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156102a057600080fd5b81356001600160a01b03811681146102b757600080fd5b9392505050565b6000602082840312156102d057600080fd5b503591905056fea26469706673582212202fef71c583239562e619360172de3e5d78267793c12f6201f0b5c21a6aab56c064736f6c63430008070033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061007d5760003560e01c806391b7f5ed1161005b57806391b7f5ed146100c357806398d5fdca146100d6578063f2fde38b146100de578063f62fb7d2146100a657600080fd5b806354aea12714610082578063715018a61461009e5780638da5cb5b146100a8575b600080fd5b61008b60025481565b6040519081526020015b60405180910390f35b6100a66100f1565b005b6000546040516001600160a01b039091168152602001610095565b6100a66100d13660046102be565b610105565b60015461008b565b6100a66100ec36600461028e565b61016b565b6100f96101e4565b610103600061023e565b565b61010d6101e4565b600081116101625760405162461bcd60e51b815260206004820152601a60248201527f50726963654f7261636c653a20696e76616c696420707269636500000000000060448201526064015b60405180910390fd5b60015542600255565b6101736101e4565b6001600160a01b0381166101d85760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610159565b6101e18161023e565b50565b6000546001600160a01b031633146101035760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610159565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156102a057600080fd5b81356001600160a01b03811681146102b757600080fd5b9392505050565b6000602082840312156102d057600080fd5b503591905056fea26469706673582212202fef71c583239562e619360172de3e5d78267793c12f6201f0b5c21a6aab56c064736f6c63430008070033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:2000:44",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:44",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "84:216:44",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "130:16:44",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "139:1:44",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "142:1:44",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "132:6:44"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "132:12:44"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "132:12:44"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "105:7:44"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "114:9:44"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "101:3:44"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "101:23:44"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "126:2:44",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "97:3:44"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "97:32:44"
                  },
                  "nodeType": "YulIf",
                  "src": "94:52:44"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "155:36:44",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "181:9:44"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "168:12:44"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "168:23:44"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "159:5:44",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "254:16:44",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "263:1:44",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "266:1:44",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "256:6:44"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "256:12:44"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "256:12:44"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "213:5:44"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "224:5:44"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "239:3:44",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "244:1:44",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "235:3:44"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "235:11:44"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "248:1:44",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "231:3:44"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "231:19:44"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "220:3:44"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "220:31:44"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "210:2:44"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "210:42:44"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "203:6:44"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "203:50:44"
                  },
                  "nodeType": "YulIf",
                  "src": "200:70:44"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "279:15:44",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "289:5:44"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "279:6:44"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "50:9:44",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "61:7:44",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "73:6:44",
                "type": ""
              }
            ],
            "src": "14:286:44"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "375:110:44",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "421:16:44",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "430:1:44",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "433:1:44",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "423:6:44"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "423:12:44"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "423:12:44"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "396:7:44"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "405:9:44"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "392:3:44"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "392:23:44"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "417:2:44",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "388:3:44"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "388:32:44"
                  },
                  "nodeType": "YulIf",
                  "src": "385:52:44"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "446:33:44",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "469:9:44"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "456:12:44"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "456:23:44"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "446:6:44"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "341:9:44",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "352:7:44",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "364:6:44",
                "type": ""
              }
            ],
            "src": "305:180:44"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "591:102:44",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "601:26:44",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "613:9:44"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "624:2:44",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "609:3:44"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "609:18:44"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "601:4:44"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "643:9:44"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "658:6:44"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "674:3:44",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "679:1:44",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "670:3:44"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "670:11:44"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "683:1:44",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "666:3:44"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "666:19:44"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "654:3:44"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "654:32:44"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "636:6:44"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "636:51:44"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "636:51:44"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "560:9:44",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "571:6:44",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "582:4:44",
                "type": ""
              }
            ],
            "src": "490:203:44"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "872:228:44",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "889:9:44"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "900:2:44",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "882:6:44"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "882:21:44"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "882:21:44"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "923:9:44"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "934:2:44",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "919:3:44"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "919:18:44"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "939:2:44",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "912:6:44"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "912:30:44"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "912:30:44"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "962:9:44"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "973:2:44",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "958:3:44"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "958:18:44"
                      },
                      {
                        "hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "978:34:44",
                        "type": "",
                        "value": "Ownable: new owner is the zero a"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "951:6:44"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "951:62:44"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "951:62:44"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1033:9:44"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1044:2:44",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1029:3:44"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1029:18:44"
                      },
                      {
                        "hexValue": "646472657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "1049:8:44",
                        "type": "",
                        "value": "ddress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1022:6:44"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1022:36:44"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1022:36:44"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1067:27:44",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1079:9:44"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1090:3:44",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1075:3:44"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1075:19:44"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1067:4:44"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "849:9:44",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "863:4:44",
                "type": ""
              }
            ],
            "src": "698:402:44"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1279:182:44",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1296:9:44"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1307:2:44",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1289:6:44"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1289:21:44"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1289:21:44"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1330:9:44"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1341:2:44",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1326:3:44"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1326:18:44"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1346:2:44",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1319:6:44"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1319:30:44"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1319:30:44"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1369:9:44"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1380:2:44",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1365:3:44"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1365:18:44"
                      },
                      {
                        "hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "1385:34:44",
                        "type": "",
                        "value": "Ownable: caller is not the owner"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1358:6:44"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1358:62:44"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1358:62:44"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1429:26:44",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1441:9:44"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1452:2:44",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1437:3:44"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1437:18:44"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1429:4:44"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1256:9:44",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1270:4:44",
                "type": ""
              }
            ],
            "src": "1105:356:44"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1640:176:44",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1657:9:44"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1668:2:44",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1650:6:44"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1650:21:44"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1650:21:44"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1691:9:44"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1702:2:44",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1687:3:44"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1687:18:44"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1707:2:44",
                        "type": "",
                        "value": "26"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1680:6:44"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1680:30:44"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1680:30:44"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1730:9:44"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1741:2:44",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1726:3:44"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1726:18:44"
                      },
                      {
                        "hexValue": "50726963654f7261636c653a20696e76616c6964207072696365",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "1746:28:44",
                        "type": "",
                        "value": "PriceOracle: invalid price"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1719:6:44"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1719:56:44"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1719:56:44"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1784:26:44",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1796:9:44"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1807:2:44",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1792:3:44"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1792:18:44"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1784:4:44"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_f24b2ea21abcac358bc9d229b7b15ef4aad2f0919eba67e7ba07dfa92137edff__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1617:9:44",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1631:4:44",
                "type": ""
              }
            ],
            "src": "1466:350:44"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1922:76:44",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1932:26:44",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1944:9:44"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1955:2:44",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1940:3:44"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1940:18:44"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1932:4:44"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1974:9:44"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1985:6:44"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1967:6:44"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1967:25:44"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1967:25:44"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1891:9:44",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1902:6:44",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1913:4:44",
                "type": ""
              }
            ],
            "src": "1821:177:44"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_f24b2ea21abcac358bc9d229b7b15ef4aad2f0919eba67e7ba07dfa92137edff__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 26)\n        mstore(add(headStart, 64), \"PriceOracle: invalid price\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n}",
      "id": 44,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "227:517:26:-:0;;;;;;;;;;;;-1:-1:-1;936:32:1;719:10:10;936:18:1;:32::i;:::-;227:517:26;;2433:187:1;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:1;;;-1:-1:-1;;;;;;2541:17:1;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;227:517:26:-;;;;;;;",
  "deployedSourceMap": "227:517:26:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;317:28;;;;;;;;;1967:25:44;;;1955:2;1940:18;317:28:26;;;;;;;;1831:101:1;;;:::i;:::-;;1201:85;1247:7;1273:6;1201:85;;-1:-1:-1;;;;;1273:6:1;;;636:51:44;;624:2;609:18;1201:85:1;490:203:44;532:210:26;;;;;;:::i;:::-;;:::i;435:91::-;513:6;;435:91;;2081:198:1;;;;;;:::i;:::-;;:::i;1831:101::-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;532:210:26:-;1094:13:1;:11;:13::i;:::-;628:1:26::1;611:14;:18;603:57;;;::::0;-1:-1:-1;;;603:57:26;;1668:2:44;603:57:26::1;::::0;::::1;1650:21:44::0;1707:2;1687:18;;;1680:30;1746:28;1726:18;;;1719:56;1792:18;;603:57:26::1;;;;;;;;;671:6;:23:::0;720:15:::1;704:13;:31:::0;532:210::o;2081:198:1:-;1094:13;:11;:13::i;:::-;-1:-1:-1;;;;;2169:22:1;::::1;2161:73;;;::::0;-1:-1:-1;;;2161:73:1;;900:2:44;2161:73:1::1;::::0;::::1;882:21:44::0;939:2;919:18;;;912:30;978:34;958:18;;;951:62;-1:-1:-1;;;1029:18:44;;;1022:36;1075:19;;2161:73:1::1;698:402:44::0;2161:73:1::1;2244:28;2263:8;2244:18;:28::i;:::-;2081:198:::0;:::o;1359:130::-;1247:7;1273:6;-1:-1:-1;;;;;1273:6:1;719:10:10;1422:23:1;1414:68;;;;-1:-1:-1;;;1414:68:1;;1307:2:44;1414:68:1;;;1289:21:44;;;1326:18;;;1319:30;1385:34;1365:18;;;1358:62;1437:18;;1414:68:1;1105:356:44;2433:187:1;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:1;;;-1:-1:-1;;;;;;2541:17:1;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;14:286:44:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;168:23;;-1:-1:-1;;;;;220:31:44;;210:42;;200:70;;266:1;263;256:12;200:70;289:5;14:286;-1:-1:-1;;;14:286:44:o;305:180::-;364:6;417:2;405:9;396:7;392:23;388:32;385:52;;;433:1;430;423:12;385:52;-1:-1:-1;456:23:44;;305:180;-1:-1:-1;305:180:44:o",
  "source": "// SPDX-License-Identifier: UNLICENSED\npragma solidity ^0.8.7;\n\nimport '@openzeppelin/contracts/access/Ownable.sol';\nimport './interface/IPriceOracle.sol';\n\n/// A simple price oracle that receives price update from owner only.\ncontract SingleFeedPriceOracle is IPriceOracle, Ownable {\n    uint256 private _price;\n    uint256 public lastUpdatedAt;\n\n    function updatePriceIfNeeded() external pure override {\n        return;\n    }\n\n    function getPrice() external view override returns (uint256) {\n        return _price;\n    }\n\n    function setPrice(uint256 requestedPrice) external onlyOwner {\n        require(requestedPrice > 0, 'PriceOracle: invalid price');\n\n        _price = requestedPrice;\n        lastUpdatedAt = block.timestamp;\n    }\n}\n",
  "sourcePath": "/Users/liyangfan/Projects/WorkSpace/bluestone/contracts/oracle/SingleFeedPriceOracle.sol",
  "ast": {
    "absolutePath": "project:/contracts/oracle/SingleFeedPriceOracle.sol",
    "exportedSymbols": {
      "Context": [
        1629
      ],
      "IPriceOracle": [
        3891
      ],
      "Ownable": [
        158
      ],
      "SingleFeedPriceOracle": [
        3878
      ]
    },
    "id": 3879,
    "license": "UNLICENSED",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3827,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".7"
        ],
        "nodeType": "PragmaDirective",
        "src": "39:23:26"
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 3828,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3879,
        "sourceUnit": 159,
        "src": "64:52:26",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/oracle/interface/IPriceOracle.sol",
        "file": "./interface/IPriceOracle.sol",
        "id": 3829,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3879,
        "sourceUnit": 3892,
        "src": "117:38:26",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 3831,
              "name": "IPriceOracle",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3891,
              "src": "261:12:26"
            },
            "id": 3832,
            "nodeType": "InheritanceSpecifier",
            "src": "261:12:26"
          },
          {
            "baseName": {
              "id": 3833,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 158,
              "src": "275:7:26"
            },
            "id": 3834,
            "nodeType": "InheritanceSpecifier",
            "src": "275:7:26"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 3830,
          "nodeType": "StructuredDocumentation",
          "src": "157:70:26",
          "text": "A simple price oracle that receives price update from owner only."
        },
        "fullyImplemented": true,
        "id": 3878,
        "linearizedBaseContracts": [
          3878,
          158,
          1629,
          3891
        ],
        "name": "SingleFeedPriceOracle",
        "nameLocation": "236:21:26",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 3836,
            "mutability": "mutable",
            "name": "_price",
            "nameLocation": "305:6:26",
            "nodeType": "VariableDeclaration",
            "scope": 3878,
            "src": "289:22:26",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 3835,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "289:7:26",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "functionSelector": "54aea127",
            "id": 3838,
            "mutability": "mutable",
            "name": "lastUpdatedAt",
            "nameLocation": "332:13:26",
            "nodeType": "VariableDeclaration",
            "scope": 3878,
            "src": "317:28:26",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 3837,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "317:7:26",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "baseFunctions": [
              3884
            ],
            "body": {
              "id": 3843,
              "nodeType": "Block",
              "src": "406:23:26",
              "statements": [
                {
                  "functionReturnParameters": 3841,
                  "id": 3842,
                  "nodeType": "Return",
                  "src": "416:7:26"
                }
              ]
            },
            "functionSelector": "f62fb7d2",
            "id": 3844,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "updatePriceIfNeeded",
            "nameLocation": "361:19:26",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 3840,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "397:8:26"
            },
            "parameters": {
              "id": 3839,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "380:2:26"
            },
            "returnParameters": {
              "id": 3841,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "406:0:26"
            },
            "scope": 3878,
            "src": "352:77:26",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              3890
            ],
            "body": {
              "id": 3852,
              "nodeType": "Block",
              "src": "496:30:26",
              "statements": [
                {
                  "expression": {
                    "id": 3850,
                    "name": "_price",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3836,
                    "src": "513:6:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 3849,
                  "id": 3851,
                  "nodeType": "Return",
                  "src": "506:13:26"
                }
              ]
            },
            "functionSelector": "98d5fdca",
            "id": 3853,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getPrice",
            "nameLocation": "444:8:26",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 3846,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "469:8:26"
            },
            "parameters": {
              "id": 3845,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "452:2:26"
            },
            "returnParameters": {
              "id": 3849,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3848,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3853,
                  "src": "487:7:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3847,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "487:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "486:9:26"
            },
            "scope": 3878,
            "src": "435:91:26",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3876,
              "nodeType": "Block",
              "src": "593:149:26",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3863,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 3861,
                          "name": "requestedPrice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3855,
                          "src": "611:14:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 3862,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "628:1:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "611:18:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "50726963654f7261636c653a20696e76616c6964207072696365",
                        "id": 3864,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "631:28:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f24b2ea21abcac358bc9d229b7b15ef4aad2f0919eba67e7ba07dfa92137edff",
                          "typeString": "literal_string \"PriceOracle: invalid price\""
                        },
                        "value": "PriceOracle: invalid price"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f24b2ea21abcac358bc9d229b7b15ef4aad2f0919eba67e7ba07dfa92137edff",
                          "typeString": "literal_string \"PriceOracle: invalid price\""
                        }
                      ],
                      "id": 3860,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "603:7:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3865,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "603:57:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3866,
                  "nodeType": "ExpressionStatement",
                  "src": "603:57:26"
                },
                {
                  "expression": {
                    "id": 3869,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3867,
                      "name": "_price",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3836,
                      "src": "671:6:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3868,
                      "name": "requestedPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3855,
                      "src": "680:14:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "671:23:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3870,
                  "nodeType": "ExpressionStatement",
                  "src": "671:23:26"
                },
                {
                  "expression": {
                    "id": 3874,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3871,
                      "name": "lastUpdatedAt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3838,
                      "src": "704:13:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 3872,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967292,
                        "src": "720:5:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 3873,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "720:15:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "704:31:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3875,
                  "nodeType": "ExpressionStatement",
                  "src": "704:31:26"
                }
              ]
            },
            "functionSelector": "91b7f5ed",
            "id": 3877,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3858,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3857,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 77,
                  "src": "583:9:26"
                },
                "nodeType": "ModifierInvocation",
                "src": "583:9:26"
              }
            ],
            "name": "setPrice",
            "nameLocation": "541:8:26",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3856,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3855,
                  "mutability": "mutable",
                  "name": "requestedPrice",
                  "nameLocation": "558:14:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 3877,
                  "src": "550:22:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3854,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "550:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "549:24:26"
            },
            "returnParameters": {
              "id": 3859,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "593:0:26"
            },
            "scope": 3878,
            "src": "532:210:26",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 3879,
        "src": "227:517:26",
        "usedErrors": []
      }
    ],
    "src": "39:706:26"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/oracle/SingleFeedPriceOracle.sol",
    "exportedSymbols": {
      "Context": [
        1629
      ],
      "IPriceOracle": [
        3891
      ],
      "Ownable": [
        158
      ],
      "SingleFeedPriceOracle": [
        3878
      ]
    },
    "id": 3879,
    "license": "UNLICENSED",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3827,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".7"
        ],
        "nodeType": "PragmaDirective",
        "src": "39:23:26"
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 3828,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3879,
        "sourceUnit": 159,
        "src": "64:52:26",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/oracle/interface/IPriceOracle.sol",
        "file": "./interface/IPriceOracle.sol",
        "id": 3829,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3879,
        "sourceUnit": 3892,
        "src": "117:38:26",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 3831,
              "name": "IPriceOracle",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3891,
              "src": "261:12:26"
            },
            "id": 3832,
            "nodeType": "InheritanceSpecifier",
            "src": "261:12:26"
          },
          {
            "baseName": {
              "id": 3833,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 158,
              "src": "275:7:26"
            },
            "id": 3834,
            "nodeType": "InheritanceSpecifier",
            "src": "275:7:26"
          }
        ],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 3830,
          "nodeType": "StructuredDocumentation",
          "src": "157:70:26",
          "text": "A simple price oracle that receives price update from owner only."
        },
        "fullyImplemented": true,
        "id": 3878,
        "linearizedBaseContracts": [
          3878,
          158,
          1629,
          3891
        ],
        "name": "SingleFeedPriceOracle",
        "nameLocation": "236:21:26",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 3836,
            "mutability": "mutable",
            "name": "_price",
            "nameLocation": "305:6:26",
            "nodeType": "VariableDeclaration",
            "scope": 3878,
            "src": "289:22:26",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 3835,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "289:7:26",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "functionSelector": "54aea127",
            "id": 3838,
            "mutability": "mutable",
            "name": "lastUpdatedAt",
            "nameLocation": "332:13:26",
            "nodeType": "VariableDeclaration",
            "scope": 3878,
            "src": "317:28:26",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 3837,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "317:7:26",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "baseFunctions": [
              3884
            ],
            "body": {
              "id": 3843,
              "nodeType": "Block",
              "src": "406:23:26",
              "statements": [
                {
                  "functionReturnParameters": 3841,
                  "id": 3842,
                  "nodeType": "Return",
                  "src": "416:7:26"
                }
              ]
            },
            "functionSelector": "f62fb7d2",
            "id": 3844,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "updatePriceIfNeeded",
            "nameLocation": "361:19:26",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 3840,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "397:8:26"
            },
            "parameters": {
              "id": 3839,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "380:2:26"
            },
            "returnParameters": {
              "id": 3841,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "406:0:26"
            },
            "scope": 3878,
            "src": "352:77:26",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              3890
            ],
            "body": {
              "id": 3852,
              "nodeType": "Block",
              "src": "496:30:26",
              "statements": [
                {
                  "expression": {
                    "id": 3850,
                    "name": "_price",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3836,
                    "src": "513:6:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 3849,
                  "id": 3851,
                  "nodeType": "Return",
                  "src": "506:13:26"
                }
              ]
            },
            "functionSelector": "98d5fdca",
            "id": 3853,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getPrice",
            "nameLocation": "444:8:26",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 3846,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "469:8:26"
            },
            "parameters": {
              "id": 3845,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "452:2:26"
            },
            "returnParameters": {
              "id": 3849,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3848,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3853,
                  "src": "487:7:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3847,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "487:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "486:9:26"
            },
            "scope": 3878,
            "src": "435:91:26",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 3876,
              "nodeType": "Block",
              "src": "593:149:26",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 3863,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 3861,
                          "name": "requestedPrice",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3855,
                          "src": "611:14:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 3862,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "628:1:26",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "611:18:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "50726963654f7261636c653a20696e76616c6964207072696365",
                        "id": 3864,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "631:28:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f24b2ea21abcac358bc9d229b7b15ef4aad2f0919eba67e7ba07dfa92137edff",
                          "typeString": "literal_string \"PriceOracle: invalid price\""
                        },
                        "value": "PriceOracle: invalid price"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f24b2ea21abcac358bc9d229b7b15ef4aad2f0919eba67e7ba07dfa92137edff",
                          "typeString": "literal_string \"PriceOracle: invalid price\""
                        }
                      ],
                      "id": 3860,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "603:7:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3865,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "603:57:26",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3866,
                  "nodeType": "ExpressionStatement",
                  "src": "603:57:26"
                },
                {
                  "expression": {
                    "id": 3869,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3867,
                      "name": "_price",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3836,
                      "src": "671:6:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3868,
                      "name": "requestedPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3855,
                      "src": "680:14:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "671:23:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3870,
                  "nodeType": "ExpressionStatement",
                  "src": "671:23:26"
                },
                {
                  "expression": {
                    "id": 3874,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3871,
                      "name": "lastUpdatedAt",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3838,
                      "src": "704:13:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 3872,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967292,
                        "src": "720:5:26",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 3873,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "720:15:26",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "704:31:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3875,
                  "nodeType": "ExpressionStatement",
                  "src": "704:31:26"
                }
              ]
            },
            "functionSelector": "91b7f5ed",
            "id": 3877,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3858,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3857,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 77,
                  "src": "583:9:26"
                },
                "nodeType": "ModifierInvocation",
                "src": "583:9:26"
              }
            ],
            "name": "setPrice",
            "nameLocation": "541:8:26",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3856,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3855,
                  "mutability": "mutable",
                  "name": "requestedPrice",
                  "nameLocation": "558:14:26",
                  "nodeType": "VariableDeclaration",
                  "scope": 3877,
                  "src": "550:22:26",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3854,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "550:7:26",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "549:24:26"
            },
            "returnParameters": {
              "id": 3859,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "593:0:26"
            },
            "scope": 3878,
            "src": "532:210:26",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 3879,
        "src": "227:517:26",
        "usedErrors": []
      }
    ],
    "src": "39:706:26"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.7+commit.e28d00a7.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.4",
  "updatedAt": "2022-10-13T07:24:15.143Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "getPrice()": {
        "returns": {
          "_0": "tokenPrice"
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "updatePriceIfNeeded()": {
        "details": "Call this function before getPrice() if price freshness is important"
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "getPrice()": {
        "notice": "Return the current token price in USD"
      },
      "updatePriceIfNeeded()": {
        "notice": "Update the token price if necessary"
      }
    },
    "notice": "A simple price oracle that receives price update from owner only.",
    "version": 1
  }
}